package vPetRes;

import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.ArrayList;

public class vPetSrc {
	
	static String saveFile = "resource/save.txt";
	static String saveFileLine = null;
	static ArrayList<String> saveDataIn = new ArrayList<String>();

	String vName;
	String vDOBt;
	String[] vDOB = {"0", "0"};
	long millisBorn;
	boolean isActive;
	float vStomach;
	
	public vPetSrc (String name, boolean active, String DOBt, String DOBd, long millis, float stomach) {
				
		vName = name;
		isActive = active;
		vDOB[0] = DOBt;
		vDOB[1] = DOBd;
		millisBorn = millis;
		vStomach = stomach;
		
		
		
	}
    public static void saveState(char args) {
    	
    	if (args=='C') {
    		try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(saveFile);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            while((saveFileLine = bufferedReader.readLine()) != null) {
            	//System.out.println(saveFileLine);
            	saveDataIn.add(saveFileLine);
            	
            }   

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                		saveFile + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + saveFile + "'");                  
            // Or we could just do this: 
            // ex.printStackTrace();
        }
    		
    	}
    	
    	if (saveDataIn.size()==0) {System.out.println(" no Data in Save");}
    	
    }
    

    public static void writeState(String args) {
    	try {
    		
    		FileWriter fileWriter = new FileWriter(saveFile);

    		// Always wrap FileWriter in BufferedWriter.
    		BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);

    		
    		bufferedWriter.write(args+"\n");
    		bufferedWriter.newLine();

    		// Always close files.
    		bufferedWriter.close();
    	}
    	catch(IOException ex) {
    		System.out.println("Error writing to file '"+saveFile+"'");
    	}
    }
    
    public static void save() {
    		
    		for (int i = 0; i<6 ; i++) {
    		writeState(vPetGui.vPetHeaders[i]+" "+vPetGui.vPetValue.get(i));
    		};
    }
}
